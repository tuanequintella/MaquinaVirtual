/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on 22/08/2011, 20:41:01
 */
package maquinavirtual;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
/**
 *
 * @author Tutti
 */
public class MainWindow extends javax.swing.JFrame {

    private File instructionFile;
    private JFileChooser chooser;
    private JTable instructionTable;
    private String[] instructionColumns = { "i", "Instrucao", "Atributo 1", "Atributo 2", "Comentario" };
    private JTable stackTable;
    private String[] stackColumns = { "Endereco", "Valor" };
    private ArrayList<StackElement> stack = new ArrayList<StackElement>();
    private ArrayList<Instruction> code = new ArrayList<Instruction>();
    private Hashtable<String, Integer> labels = new Hashtable<String, Integer>();
    private JScrollPane scrIntructions;
    private Execution execution;
    
    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
        chooser = new JFileChooser();
        execution = new Execution();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEsq = new javax.swing.JPanel();
        btnFile = new javax.swing.JButton();
        pnlInstructions = new javax.swing.JPanel();
        lblFilePath = new javax.swing.JLabel();
        btnExec = new javax.swing.JButton();
        pnlDir = new javax.swing.JPanel();
        pnlStack = new javax.swing.JPanel();
        scrSaida = new javax.swing.JScrollPane();
        txtSaida = new javax.swing.JTextArea();
        lblSaida = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        btnFile.setText("Load");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        pnlInstructions.setLayout(new java.awt.BorderLayout());

        lblFilePath.setText("Nenhum arquivo carregado.");

        btnExec.setLabel("Executar");
        btnExec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEsqLayout = new javax.swing.GroupLayout(pnlEsq);
        pnlEsq.setLayout(pnlEsqLayout);
        pnlEsqLayout.setHorizontalGroup(
            pnlEsqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEsqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEsqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEsqLayout.createSequentialGroup()
                        .addComponent(pnlInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnlEsqLayout.createSequentialGroup()
                        .addComponent(lblFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFile)
                        .addGap(100, 100, 100))))
            .addGroup(pnlEsqLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(btnExec)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        pnlEsqLayout.setVerticalGroup(
            pnlEsqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEsqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEsqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFile)
                    .addComponent(lblFilePath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(btnExec)
                .addGap(44, 44, 44))
        );

        getContentPane().add(pnlEsq);

        pnlStack.setLayout(new java.awt.BorderLayout());

        txtSaida.setColumns(20);
        txtSaida.setRows(5);
        scrSaida.setViewportView(txtSaida);

        lblSaida.setText("Sa√≠da:");

        javax.swing.GroupLayout pnlDirLayout = new javax.swing.GroupLayout(pnlDir);
        pnlDir.setLayout(pnlDirLayout);
        pnlDirLayout.setHorizontalGroup(
            pnlDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDirLayout.createSequentialGroup()
                        .addGroup(pnlDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrSaida, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                            .addComponent(pnlStack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(pnlDirLayout.createSequentialGroup()
                        .addComponent(lblSaida)
                        .addContainerGap(494, Short.MAX_VALUE))))
        );
        pnlDirLayout.setVerticalGroup(
            pnlDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDirLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(pnlStack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                .addComponent(lblSaida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlDir);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed

    if(chooser.showOpenDialog(null)==JFileChooser.APPROVE_OPTION)
        instructionFile = chooser.getSelectedFile();
    try{
            BufferedReader in = new BufferedReader(new FileReader(instructionFile));
            String instr;
            

            
            for (int k = 0;in.ready();k++) {
                
                instr = in.readLine();
                String[] instrSet = {"", "", "", "" };

               boolean lastWasSpace = false;
               int i=-1;
               for(char e: instr.toCharArray()) {
                    if(i<3)
                    {
                        if (Character.isSpaceChar(e) || e=='\t')
                        {
                            if(!lastWasSpace) {
                                lastWasSpace = true;
                                i++;
                            }
                            continue;
                        }
                        else
                        {
                            lastWasSpace = false;
                        }
                    }
                    if(i<0)
                        i++;
                    instrSet[i] = instrSet[i]+e;
                }
            
                if(instrSet[1].equals("NULL"))
                {    labels.put(instrSet[0],k);
                    instrSet[0] = "NULL";
                    instrSet[1] = "";
                }
               
                
                Instruction tmp = new Instruction(instrSet[0],instrSet[1],instrSet[2],instrSet[3]);
                
                code.add(tmp);
               
            }
            
            for(Instruction e: code)
            {
                 if( (e.getOperation().equals("JMP")) ||
                     (e.getOperation().equals("JMPF")) ||
                     (e.getOperation().equals("CALL")) )
                    e.setAttr1(String.valueOf(labels.get(e.getAttr1())));
            }
            
            
            lblFilePath.setText(instructionFile.toString());
            lblFilePath.updateUI();
            
            String[][] tableValues = new String[code.size()][5];
            for(int i=0; i<code.size(); i++)
            {   tableValues[i][0] = String.valueOf(i);
                tableValues[i][1] = code.get(i).getOperation();
                tableValues[i][2] = code.get(i).getAttr1();
                tableValues[i][3] = code.get(i).getAttr2();
                tableValues[i][4] = code.get(i).getDescription();      
            }
            
            instructionTable = new JTable(tableValues, instructionColumns);
            
           scrIntructions = new JScrollPane(instructionTable);
            pnlInstructions.add(instructionTable.getTableHeader(),BorderLayout.NORTH);
            pnlInstructions.add(scrIntructions,BorderLayout.CENTER);
            
            pnlInstructions.updateUI();
               
    }
        catch(Exception ex)
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao ler o arquivo!", "Ops!", JOptionPane.ERROR_MESSAGE);
        }
    //System.out.println(instructionFile);
    
    
}//GEN-LAST:event_btnFileActionPerformed

private void btnExecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecActionPerformed

    execution.incI();
    execution.execute(code.get(execution.getI()), stack,txtSaida);

    if(stackTable!=null)
    {    pnlStack.remove(stackTable.getTableHeader());
        pnlStack.remove(stackTable);
    }
    Integer[][] tableValues = new Integer[stack.size()][2];
    for(int i=0; i<stack.size(); i++)
    {   tableValues[i][0] = stack.get(i).getAddress();
        tableValues[i][1] = stack.get(i).getValue();
    }

    
    stackTable = new JTable(tableValues, stackColumns);
    
    
    pnlStack.add(stackTable.getTableHeader(),BorderLayout.NORTH);
    pnlStack.add(stackTable,BorderLayout.CENTER);

    stackTable.updateUI();
    pnlStack.updateUI();
    
}//GEN-LAST:event_btnExecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExec;
    private javax.swing.JButton btnFile;
    private javax.swing.JLabel lblFilePath;
    private javax.swing.JLabel lblSaida;
    private javax.swing.JPanel pnlDir;
    private javax.swing.JPanel pnlEsq;
    private javax.swing.JPanel pnlInstructions;
    private javax.swing.JPanel pnlStack;
    private javax.swing.JScrollPane scrSaida;
    private javax.swing.JTextArea txtSaida;
    // End of variables declaration//GEN-END:variables
}
